generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  userId    String     @id @default(cuid())
  email     String
  donations Donation[]
}

model Organization {
  orgId       String  @id @default(cuid())
  orgName     String
  orgEmail    String
  description String
  category    String
  orgImg      String
  rip         String
  causes      Cause[]
}

model Cause {
  causeId          String       @id @default(cuid())
  causeImg         String
  title            String
  causeDescription String
  causeCategory    String
  createdAt        DateTime     @default(now())
  target           Int
  current          Int
  accepted         Boolean      @default(false)
  status           Boolean      @default(false)
  authorId         String
  author           Organization @relation(fields: [authorId], references: [orgId])
  donations        Donation[]
}

model Donation {
  donationId String   @id @default(cuid())
  createdAt  DateTime @default(now())
  amount     Int
  userId     String
  causeId    String
  cause      Cause    @relation(fields: [causeId], references: [causeId])
  user       User     @relation(fields: [userId], references: [userId])
}

model Admin {
  adminId String @id @default(cuid())
  email   String
}

model Conversation {
  conversationId String    @id
  orgName        String?
  userEmail      String?
  orgId          String?
  Message        Message[]
}

model Message {
  messageId      String        @id
  sender         String?
  content        String?
  createdAt      DateTime?     @default(now())
  conversationId String?
  Conversation   Conversation? @relation(fields: [conversationId], references: [conversationId], onDelete: Restrict)
}
